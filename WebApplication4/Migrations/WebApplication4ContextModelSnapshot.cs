// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication4.Data;

namespace WebApplication4.Migrations
{
    [DbContext(typeof(WebApplication4Context))]
    partial class WebApplication4ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication4.Models.CityWeather", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MainID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WindID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MainID");

                    b.HasIndex("WindID");

                    b.ToTable("CityWeather");
                });

            modelBuilder.Entity("WebApplication4.Models.MainWeather", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("feels_like")
                        .HasColumnType("real");

                    b.Property<int>("humidity")
                        .HasColumnType("int");

                    b.Property<int>("pressure")
                        .HasColumnType("int");

                    b.Property<float>("temp")
                        .HasColumnType("real");

                    b.Property<float>("temp_max")
                        .HasColumnType("real");

                    b.Property<float>("temp_min")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("MainWeather");
                });

            modelBuilder.Entity("WebApplication4.Models.Wind", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("deg")
                        .HasColumnType("real");

                    b.Property<float>("speed")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Wind");
                });

            modelBuilder.Entity("WebApplication4.Models.CityWeather", b =>
                {
                    b.HasOne("WebApplication4.Models.MainWeather", "Main")
                        .WithMany()
                        .HasForeignKey("MainID");

                    b.HasOne("WebApplication4.Models.Wind", "Wind")
                        .WithMany()
                        .HasForeignKey("WindID");

                    b.Navigation("Main");

                    b.Navigation("Wind");
                });
#pragma warning restore 612, 618
        }
    }
}
